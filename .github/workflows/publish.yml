name: Publish to npm and GitHub Release

on:
  push:
    branches:
      - main

permissions:
  contents: write # Grants permission to push code, commits, and tags
  issues: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Install pnpm
        run: npm install -g pnpm

      # Install dependencies
      - name: Install dependencies
        run: pnpm install

      # Set up Git identity (this is required to perform version commits)
      - name: Set Git user identity
        run: |
          git config --global user.name "Timeo Williams"
          git config --global user.email "timwillie73@gmail.com"

      - name: Bump version
        run: pnpm version patch

      # Push new version commit and tag to GitHub
      - name: Push version commit and tag
        run: |
          git push origin main --tags

      # Fetch tags to ensure the GitHub Action can access the tag
      - name: Fetch all tags
        run: git fetch --tags

      # Build the macOS binary
      # IMPORTANT: You need to build the binary on macOS because it can't be built on Ubuntu
  macos-build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Build macOS binary
        run: npm run build:macos

      - name: Package binary using node-pre-gyp
        run: npm run package:binary

      - name: Publish binary to GitHub Releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.NODE_PRE_GYP_GITHUB_TOKEN }}
        run: npm run publish:binary
      # Publish to npm (after binaries are built and uploaded)
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      # Get the latest tag
      - name: Get latest tag
        id: get_tag
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"

      # Create a new release on GitHub using the pushed tag
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.0.8
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }} # Dynamically use the latest tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
